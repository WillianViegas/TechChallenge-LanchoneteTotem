version: '3.4'

services:
  techchallenge-lanchonetetotem:
    image: ${DOCKER_REGISTRY-}techchallengelanchonetetotem
    build:
      context: .
      dockerfile: TechChallenge-LanchoneteTotem/Dockerfile
    ports:
      - "7003:80"
      - "7004:443"
    networks:
      - prod-network
    environment:
        DatabaseConfig__ConnectionString: 'mongodb://admin:abc123!@mongodblanchonete:27017'
        DatabaseConfig__DatabaseName: 'LanchoneteTotem'
        DatabaseConfig__User: 'admin'
        DatabaseConfig__Password: 'abc123!'
    depends_on:
        - mongodb

  pagamentopedidonotificationconsumer:
     image: ${DOCKER_REGISTRY-}pagamentopedidonotificationconsumer
     build:
         context: .
         dockerfile: PagamentoPedidoNotificationConsumer/Dockerfile
     ports:
         - "7005:80"
         - "7006:443"
     networks:
         - prod-network
     environment:
         DatabaseConfig__ConnectionString: 'mongodb://admin:abc123!@mongodblanchonete:27017'
         DatabaseConfig__DatabaseName: 'LanchoneteTotem'
         DatabaseConfig__User: 'admin'
         DatabaseConfig__Password: 'abc123!'
         LocalStack__Config__LocalStackHost: 'localstack'
         AWS_ACCESS_KEY_ID: '{AWS_ACCESS_KEY_ID}'
         AWS_SECRET_ACCESS_KEY: '{AWS_SECRET_ACCESS_KEY}'
         AWS_REGION: 'us-east-1'
         MY_SECRET: '{MY_SECRET}'
     depends_on:
         - mongodb
         - localstack

  notifier:
     image: ${DOCKER_REGISTRY-}notifier
     build:
         context: .
         dockerfile: Notifier/Dockerfile
     ports:
         - "7007:80"
         - "7008:443"
     networks:
         - prod-network
     environment:
         ASPNETCORE_ENVIRONMENT: 'Development'
         ASPNETCORE_URLS: 'https://+:443;http://+:80'
         LocalStack__Config__LocalStackHost: 'localstack'
         AWS_ACCESS_KEY_ID: '{AWS_ACCESS_KEY_ID}'
         AWS_SECRET_ACCESS_KEY: '{AWS_SECRET_ACCESS_KEY}'
         AWS_REGION: 'us-east-1'
         MY_SECRET: '{MY_SECRET}'
     depends_on:
         - localstack

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack:latest
    ports:
      - "4510-4559:4510-4559"  # external service port range
      - "4566:4566"            # LocalStack Edge Proxy
    networks:
         - prod-network
    environment:
      AWS_DEFAULT_REGION: us-east-1
      SERVICES: sqs,s3
    # volumes:
    #   - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
    #   - "/var/run/docker.sock:/var/run/docker.sock"

  mongodb:
     image: mongo:latest
     networks:
       - prod-network
     container_name: mongodblanchonete
     command: mongod --port 27017 --bind_ip 0.0.0.0
     environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'abc123!'

networks:
  prod-network:
    driver: bridge